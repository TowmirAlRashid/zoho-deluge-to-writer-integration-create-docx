all_patients_log = Map();
writer_doc_id = "jdi031483447563cc465e92156a511aefad8e";
// merge_field_response = zoho.writer.getMergeFields(writer_doc_id,"zoho_one_conn");
// info merge_field_response;

crm_timelog_records_all = List();
crm_timelog_records_all.addAll(zoho.crm.getRecords("CCM_Program_Timelog", 1, 200, {"cvid": "5487746000008225174"}));
crm_timelog_records_all.addAll(zoho.crm.getRecords("CCM_Program_Timelog", 2, 200, {"cvid": "5487746000008225174"}));
crm_timelog_records_all.addAll(zoho.crm.getRecords("CCM_Program_Timelog", 3, 200, {"cvid": "5487746000008225174"}));
// info zoho.crm.getRecords("CCM_Program_Timelog");
occurances = List();
for each  record in crm_timelog_records_all
{
	patient_id = record.get("Patient").get("id");
	if(all_patients_log.get(patient_id) == null)
	{
		Occurances = List();
		Occurances.add({"Created_Time": record.get("Created_Time").getDate(), "Services_List": record.get("Services_List"), "Time": record.get("Time")});
		all_patients_log.put(patient_id,{"Patient_Name":record.get("Patient").get("name"),"Time_Log":ifnull(record.get("Time"),"0:00:00:00"), "Occurances": Occurances});
	}
	else
	{
		occurance = {"Created_Time": record.get("Created_Time").getDate(), "Services_List": record.get("Services_List"), "Time": record.get("Time")};
		Occurances = all_patients_log.get(patient_id).get("Occurances");
		Occurances.add(occurance);
	
		current_time = ifnull(all_patients_log.get(patient_id).get("Time_Log"),"0:00:00:00");
		current_hour = current_time.subText(0,1).toNumber();
		current_minutes = current_time.subText(2,4).toNumber();
		current_seconds = current_time.subText(5,7).toNumber();
		current_milliseconds = current_time.subText(8).toNumber();
		new_time = ifnull(record.get("Time"),"0:00:00:00");
		new_hour = new_time.subText(0,1).toNumber();
		new_minutes = new_time.subText(2,4).toNumber();
		new_seconds = new_time.subText(5,7).toNumber();
		new_milliseconds = new_time.subText(8).toNumber();
		final_milliseconds = current_milliseconds + new_milliseconds;
		if(final_milliseconds >= 100)
		{
			final_milliseconds = final_milliseconds % 100;
			current_seconds = current_seconds + 1;
		}
		final_seconds = current_seconds + new_seconds;
		if(final_seconds >= 60)
		{
			final_seconds = final_seconds % 60;
			current_minutes = current_minutes + 1;
		}
		final_minutes = current_minutes + new_minutes;
		if(final_minutes >= 60)
		{
			final_minutes = final_minutes % 60;
			current_hour = current_hour + 1;
		}
		final_hour = current_hour + new_hour;
		if(final_minutes < 10)
		{
			final_minutes = "0" + final_minutes;
		}
		if(final_seconds < 10)
		{
			final_seconds = "0" + final_seconds;
		}
		if(final_milliseconds < 10)
		{
			final_milliseconds = "0" + final_milliseconds;
		}
		all_patients_log.put(patient_id,{"Patient_Name":record.get("Patient").get("name"),"Patient_ID":record.get("Patient").get("id"),"Time_Log":ifnull(final_hour + ":" + final_minutes + ":" + final_seconds + ":" + final_milliseconds,"0:00:00:00"), "Occurances": Occurances});
	}
}
// info all_patients_log;
for each patient in all_patients_log
{
	Name = ifnull(patient.get("Patient_Name"), "");
	record_id  = ifnull(patient.get("Patient_ID"), "");
	Total_Time_Log = ifnull(patient.get("Time_Log"), "");
	Occurances = ifnull(patient.get("Occurances"), List() );
	Appointments = List();
	for each Occurance in Occurances
    {
		appointment_map = {
			"Appointments.Date": ifnull(Occurance.get("Created_Time"), ""),
			"Appointments.Services": ifnull(Occurance.get("Services_List"), List() ).toString(","),
			"Appointments.Time_Log": ifnull(Occurance.get("Time"), "0:00:00:00")
		};
		Appointments.add(appointment_map);
    }
	writer_data = {
    "data": {
      {
        "Appointments": Appointments,
        "Name": Name,
        "Total_Time_Log": Total_Time_Log
      }
    }
};
	params = {"output_format":"docx","merge_data":writer_data};
writer_resp = invokeurl
[
	url :"https://zohoapis.com/writer/api/v1/documents/" + writer_doc_id + "/merge"
	type :POST
	parameters:params
	connection:"zoho_one_conn"
];
file_name = "Appointment doc " + Name + ".docx";
writer_resp.setFileName(file_name);

zoho.crm.attachFile("Contacts",record_id,writer_resp);
}
